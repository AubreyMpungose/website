---
title: "Cross validation"
subtitle: "STA 210 - Spring 2022"
author: "Dr. Mine Ã‡etinkaya-Rundel"
footer: "[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)"
logo: "images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    incremental: true 
    chalkboard: true
editor: visual
execute:
  freeze: auto
---

```{r}
#| include: false

# figure options
knitr::opts_chunk$set(
  fig.width = 10, fig.asp = 0.618, out.width = "90%",
  fig.retina = 3, dpi = 300, fig.align = "center"
)
```

# Welcome

## Announcements

::: nonincremental
-   My Monday office hours moved to 8-9pm
:::

## Topics

::: nonincremental
-   Feature engineering with recipes
-   Workflows to bring together models and recipes
-   RMSE and $R^2$ for model evaluation
-   Cross validation
:::

## Computational setup

```{r}
#| echo: true

# load packages
library(tidyverse)
library(tidymodels)
library(gghighlight)
library(knitr)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))
```

# Introduction

## The Office

![](images/lec-13/the-office.jpeg)

## Data & goal

-   Data: The data come from [data.world](https://data.world/anujjain7/the-office-imdb-ratings-dataset), by way of [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-17/readme.md)

-   Goal: Predict `imdb_rating` from other variables in the dataset

```{r}
#| echo: true

office_ratings <- read_csv(here::here("slides", "data/office_ratings.csv"))
office_ratings
```

# Cross validation

## Cross validation

More specifically, **v-fold cross validation**:

::: columns
::: {.column width="60%"}
::: nonincremental
-   Shuffle your **training** **data** into v partitions
-   Use 1 partition for validation, and the remaining v-1 partitions for training
-   Repeat v times
:::
:::

::: {.column width="40%"}
![](images/lec-13/cross-validation.png)
:::
:::

::: callout-note
You might also heard of this referred to as **k-fold cross validation**.
:::

## 5-fold Cross validation

![](images/lec-13/cross-validation.png)

## Split data

```{r}
#| echo: true
#| eval: false

set.seed(345)
folds <- vfold_cv(office_train, v = 5)
folds
```

## Fit resamples

![](images/lec-13/cross-validation-animated.gif)

## Fit resamples

```{r}
#| echo: true
#| eval: false

set.seed(456)

office_fit_rs <- office_wflow %>%
  fit_resamples(folds)

office_fit_rs
```

## Collect CV metrics

```{r}
#| echo: true
#| eval: false

collect_metrics(office_fit_rs)
```

## Deeper look into CV metrics

```{r}
#| echo: true
#| eval: false

collect_metrics(office_fit_rs, summarize = FALSE)
```

## Deeper look into CV metrics

```{r}
#| eval: false

cv_metrics <- collect_metrics(office_fit_rs, summarize = FALSE) 

cv_metrics %>%
  mutate(.estimate = round(.estimate, 3)) %>%
  pivot_wider(id_cols = id, names_from = .metric, values_from = .estimate) %>%
  kable(col.names = c("Fold", "RMSE", "R-squared"))
```

## How does RMSE compare to y?

Cross validation RMSE stats:

```{r}
#| eval: false

cv_metrics %>%
  filter(.metric == "rsq") %>%
  summarise(
    min = min(.estimate),
    max = max(.estimate),
    mean = mean(.estimate),
    sd = sd(.estimate)
  )
```

Training data IMDB score stats:

```{r}
#| eval: false

office_ratings %>%
  summarise(
    min = min(imdb_rating),
    max = max(imdb_rating),
    mean = mean(imdb_rating),
    sd = sd(imdb_rating)
  )
```

## What's next?

![](images/lec-13/post-cv-testing.png)

## Recap

::: nonincremental
-   Feature engineering with recipes
-   Workflows to bring together models and recipes
-   RMSE and $R^2$ for model evaluation
-   Cross validation
:::
